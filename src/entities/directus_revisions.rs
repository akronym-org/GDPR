//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "directus_revisions")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub activity: i32,
    pub collection: String,
    pub item: String,
    pub data: Option<Json>,
    pub delta: Option<Json>,
    pub parent: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::directus_activity::Entity",
        from = "Column::Activity",
        to = "super::directus_activity::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    DirectusActivity,
    #[sea_orm(
        belongs_to = "Entity",
        from = "Column::Parent",
        to = "Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    SelfRef,
}

impl Related<super::directus_activity::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DirectusActivity.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
