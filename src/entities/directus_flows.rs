//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "directus_flows")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub name: String,
    pub icon: Option<String>,
    pub color: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    pub status: String,
    pub trigger: Option<String>,
    pub accountability: Option<String>,
    pub options: Option<Json>,
    #[sea_orm(unique)]
    pub operation: Option<Uuid>,
    pub date_created: Option<DateTimeWithTimeZone>,
    pub user_created: Option<Uuid>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::directus_operations::Entity")]
    DirectusOperations,
    #[sea_orm(
        belongs_to = "super::directus_users::Entity",
        from = "Column::UserCreated",
        to = "super::directus_users::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    DirectusUsers,
}

impl Related<super::directus_operations::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DirectusOperations.def()
    }
}

impl Related<super::directus_users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DirectusUsers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
